[
["第5章-推定と検定の考え方.html", "第5章 推定と検定の考え方 ", " 第5章 推定と検定の考え方 "],
["不偏推定量p-128-129.html", "5.1.1 不偏推定量(p.128-129)", " 5.1.1 不偏推定量(p.128-129) (5.1)式は，標本分散\\(s ^{2}\\)の期待値\\(E(s ^{2})\\)が，母集団分散\\(\\sigma ^{2}\\)よりもわずかに小さくなることを意味しています。 \\[ E(s ^{2}) = \\frac{N - 1}{N} \\sigma ^{2} \\tag{5.1}\\\\ \\] (5.1)式は母集団分布の種類によらないことをシミュレーションで確認してみましょう。 母集団が(標準)正規分布の場合 正規分布は平均\\(\\mu\\)と分散\\(\\sigma ^{2}\\)で特徴づけられる分布です。特に，平均\\(\\mu = 0\\)，分散\\(\\sigma ^{2} = 1\\)の時の正規分布を標準正規分布と呼びます。 正規分布の詳しい説明は4章を参考にしてください。 シミュレーションの手順 正規分布に従う乱数を発生させるrnorm()関数を使って，標準正規分布に従う乱数を生成し，sim_norm_valueというオブジェクトに代入する。 rnorm()関数は，rnorm(生成したい乱数の数, mean = 母集団の平均の値, sd = 母集団の標準偏差の値)という引数を指定します。今回は標準正規分布に従う乱数を100個生成するので，rnorm(100, mean = 1, sd = 0)というコードになります。 sim_norm_valueの分散を計算し，sim_norm_varというオブジェクトに代入する。 上記の手順をfor文を使い1000回繰り返す。 1000個のsim_norm_varの期待値を計算する。 標準正規分布に従う100個の乱数を生成し，分散を求める作業を1000回繰り返します。 set.seed(1234) sim_norm_value &lt;- matrix(NA, nrow = 1000, ncol = 100) sim_norm_var &lt;- NA for(i in 1:1000){ sim_norm_value[i,] &lt;- rnorm(100, mean = 0, sd = 1) sim_norm_var[i] &lt;- mean((sim_norm_value[i,] - mean(sim_norm_value[i,]))^2) } 1000回繰り返したうちの1回目の乱数をヒストグラムで確認します。 hist(sim_norm_value[1,]) 平均が0付近になっていることが確認できます。 コンソールにsim_norm_varと入力すると，計算された分散が1000個表示されます。 sim_norm_varの期待値を計算します。 mean(sim_norm_var) ## [1] 0.988825 乱数を生成する際に，母集団の分散は1としました。教科書の記述通り標本分散の期待値は母集団分散よりもわずかに小さくなりことが確認できます。 (5.1)式の関係が成り立っているか確認しましょう。今回のサンプルサイズ\\(N\\)は100です。 \\[ E(s ^{2}) = \\frac{N - 1}{N} \\sigma ^{2} \\tag{5.1}\\\\ \\] ((100 - 1) / 100) * 1 ## [1] 0.99 ほぼ一致する値となりました。 母集団が2項分布の場合 2項分布は「成功確率\\(\\pi\\)の試行を独立に\\(N\\)回繰り返したときの成功数\\(w\\)の確率を与える分布」(教科書p96)でした。 シミュレーションの手順 2項分布に従う乱数を発生させるrbinom()関数を使って2項分布に従う乱数を生成し，sim_binom_valueというオブジェクトに代入する。 rbinom()関数は，rnorm(生成したい乱数の数, size = 試行数, prob = 成功確率)という引数を指定します。今回は試行数\\(N = 5\\)，成功確率\\(\\pi = .6\\)の2項分布に従う乱数を100個生成します。よって，rbinom(100, size = 5, prob = 0.6)というコードになります。 sim_binom_valueの分散を計算し，sim_binom_varというオブジェクトに代入する。 (以下同様の手順を繰り返す) 試行数\\(N = 5\\)，成功確率\\(\\pi = .6\\)の2項分布に従う100個の乱数を生成し，分散を求める作業を1000回繰り返します。 set.seed(1234) sim_binom_value &lt;- matrix(NA, nrow = 1000, ncol = 100) sim_binom_var &lt;- NA for(i in 1:1000){ sim_binom_value[i,] &lt;- rbinom(100, size = 5, prob = 0.6) sim_binom_var[i] &lt;- mean((sim_norm_value[i,] - mean(sim_norm_value[i,]))^2) } 1000回繰り返したうちの1回目の乱数を棒グラフで確認します(軸に日本語を使っているので，Macの人は文字化けする可能性があります。3章3.1.1や4章4.1.1で対処法を載せているので確認してください)。 barplot(table(sim_binom_value[1,]), ylim = c(0, 50), xlab = &quot;成功数w&quot;, ylab = &quot;度数&quot;) 試行数\\(N = 5\\)，成功確率\\(\\pi = .6\\)の2項分布に従うので，成功数\\(w\\)は0から5までを取ります。 成功確率\\(\\pi\\)が0,6なので，成功数\\(w\\)は3が最も多く出現するはずですが，シミュレーションなので今回は4が最も多く出現しています。sim_binom_value[1,]をsim_binom_value[2,]やsim_binom_value[3,]などに変更して他の乱数の棒グラフを確認してみてください。 ここの数字は1000回繰り返した乱数の順番を表しています。 2項分布の母集団分散\\(\\sigma ^{2} _{w}\\)は教科書p.99の(4.8)式に従って計算することができます。(4.8)式は標準偏差を表しているので，ルートをとることで分散になります。 \\[ \\sigma ^{2} = N \\pi(1 - \\pi) \\] よって，試行数\\(N = 5\\)，成功確率\\(\\pi = .6\\)に従う2項分布の分散は以下の値になります。 5 * 0.6 * (1 - 0.6) ## [1] 1.2 sim_binom_varの期待値を計算します。 mean(sim_binom_var) ## [1] 0.988825 母集団分散\\(\\sigma ^{2} _{w}\\)よりも標本分散の期待値が小さくなっていることがわかります。 (5.1)式の関係が成り立っているか確認しましょう。 ((5 - 1) / 5) * 1.2 ## [1] 0.96 ほぼ一致する値となりました。 以上から，母集団分布の種類によらず(5.1)式の関係が成り立っていることが確認できました。 "],
["最尤法.html", "5.1.2 最尤法", " 5.1.2 最尤法 (5.3)式について，母数\\(\\pi\\)を変化させて尤度を計算してみましょう。 \\[ L(\\pi) = \\pi ^{3}(1 - \\pi) ^{2}\\tag{5.3}\\\\ \\] \\(\\pi = 0.2\\)の時 0.2 ^3 * (1 - 0.2) ^2 ## [1] 0.00512 \\(\\pi = 0.4\\)の時 0.4 ^3 * (1 - 0.4) ^ 2 ## [1] 0.02304 \\(\\pi = 0.6\\)の時 0.6 ^3 * (1 - 0.6) ^ 2 ## [1] 0.03456 図5-1と同じ値が計算されていることがわかります。 毎回コードを入力するのは面倒なので，一度に計算できるように(5.3)式をyuudo()関数として新たな関数を定義します。 引数のPIは(5.3)式の母数\\(\\pi\\)に対応します。 yuudo &lt;- function(PI){ PI ^3 * (1 - PI) ^2 } \\(\\pi = 0.2\\)の時 yuudo(0.2) ## [1] 0.00512 同じ値が計算できました。 ベクトルでまとめて計算します。 yuudo(c(0.2, 0.4, 0.6, 0.8)) ## [1] 0.00512 0.02304 0.03456 0.02048 \\(\\pi = 0.6\\)の時が値が大きいことがわかります。 図5-1を書いてみましょう。 最初のコードは第4章4.1.1で図を書いたときと同じように，0から1まで0.01刻みのベクトルを作成しています。 x &lt;- seq(0, 1, 0.01) plot(x, yuudo(x), type = &quot;l&quot;, las = 1, bty = &quot;l&quot;, tcl = 0.2, yaxp = c(0, 0.04, 4), ylim = c(0, 0.04), xlab = expression(pi), ylab = &quot;尤度&quot;) "],
["標準誤差による推定制度の評価.html", "5.1.3 標準誤差による推定制度の評価", " 5.1.3 標準誤差による推定制度の評価 (5.7)式の計算をします。 (1 - 0.5 ^2) / sqrt(100) ## [1] 0.075 "],
["標準誤差に基づくサンプルサイズの決定.html", "5.1.4 標準誤差に基づくサンプルサイズの決定", " 5.1.4 標準誤差に基づくサンプルサイズの決定 標準誤差を.05以下に抑えたいとき \\[ \\begin{align} \\frac{1 - r ^{2}}{\\sqrt{N}} &amp;\\leq .05\\\\ 1 - r ^{2} &amp;\\leq .05 \\times \\sqrt{N}\\\\ .05 \\times \\sqrt{N} &amp;\\geq 1 - r ^{2}\\\\ \\sqrt{N} &amp;\\geq \\frac{1}{.05} \\times (1 - r ^{2})\\\\ N &amp;\\geq 400(1 - r ^{2}) ^{2}\\\\ \\end{align} \\] \\(r = .5\\)程度の大きさの相関が見込まれるとき 400 * (1 - 0.5^2) ^2 ## [1] 225 "],
["検定統計量の帰無分布と棄却域.html", "5.2.1 検定統計量の帰無分布と棄却域", " 5.2.1 検定統計量の帰無分布と棄却域 \\(N = 20\\)，母集団相関係数\\(\\rho = 0\\)の時の相関係数\\(r\\)の標本分布を示した図5-2を書きます。 。 教科書p.114には「相関係数\\(r\\)の標本分布の確率密度関数は数学的にかなり複雑になる」とありますが，Rでは追加のパッケージであるSuppDistsパッケージをインストールすることで簡単に計算することができるようになります。 SuppDistパッケージを使うには初回にインストールを行う必要があります。以下のコード，もしくはパッケージタブにあるinstallボタンからパッケージをインストールしてください。 install.packages(&quot;SuppDists&quot;) 一度インストールすればその後は上記のコードを入力する必要はありません。 インストールしたパッケージを読み込みます。この作業はインストールと違い，パッケージを使うたびに行う必要があります。library()関数で読み込まないとパッケージが使えないので注意してください。 library(SuppDists) 正規分布の確率密度を求めるには，normのdensity(密度)の略でdnorm()関数が用意されています。ピアソンの相関係数\\(r\\)の標本分布の確率密度を求めるには，SuppDistsパッケージのdPearson()関数を使います。 dPearson()関数は，dPearson(標本相関係数$r$，N = サンプルサイズ, rho = 母集団相関係数)を引数に指定します。 図5-2は母集団相関係数\\(\\rho = 0\\)，サンプルサイズ\\(N = 20\\)なので，N = 20,rho = 0.0と引数を指定します。 図5-2を書いていきましょう。 x &lt;- seq(-1, 1, 0.01) plot(x, dPearson(x, N = 20, rho = 0.0), type = &quot;l&quot;, las = 1, bty = &quot;l&quot;, tcl = 0.2, ylim = c(0, 2), yaxp = c(0, 2, 4), xlim = c(-1, 1), xaxp = c(-1, 1, 10), xlab = &quot;r&quot;, ylab = &quot;確率密度&quot;) \\(|r| &gt; .444\\)の範囲に含まれる確率が約5%であることを確認しましょう。 ある範囲に含まれる確率を求めるには密度関数を積分することで計算することができます。 Rで積分をするにはintegrate()関数を使います。 integrate()関数は，integrate(積分したい関数，lower = 範囲の下限，upper = 範囲の上限)を引数に指定することで計算することができます。 rho_0_pdf_inte &lt;- integrate(dPearson, N = 20, rho = 0.0, lower = -0.444, upper = 0.444) rho_0_pdf_inte$value ## [1] 0.9501889 \\(|r| &lt; 0.444(-0.444 &lt; r &lt; 0.444)\\)の範囲に全体の0.95…，つまり約95%が含まれていることがわかりました。 確率は全体で1なので，1から\\(|r| &lt; 0.444\\)に含まれる範囲を引くと\\(|r| &gt; 0.444(r &lt; -0.444, 0.444 &lt; r)\\)の範囲を求めることができます。 1 - rho_0_pdf_inte$value ## [1] 0.04981113 \\(|r| &gt; 0.444\\)に含まれる確率が約5%であることが確認できました。 第4章4.2.1の演習と同様に，SuppDistsパッケージには下側確率を求めるpPraeson()関数があります。pPearson()関数を使って\\(|r| &gt; .444\\)の範囲に含まれる確率が約5%であることを確認しましょう。 pPearson(0.444, N = 20, rho = 0.0) - pPearson(-0.44, N = 20, rho = 0.0) ## [1] 0.9490156 1 - (pPearson(0.444, N = 20, rho = 0.0) - pPearson(-0.44, N = 20, rho = 0.0)) ## [1] 0.05098443 確率密度関数を積分して確認した時と同じように，\\(|r| &gt; 0.444\\)に含まれる確率が約5%であることが確認できました。 これまで\\(|r| &gt; 0.444\\)に含まれる確率が約5%であることを確認しました。逆に，全体の5%となる確率に対応する標本相関係数\\(r\\)の値を確認することもできます。 SuppDists()関数のqPearson()関数で全体の97.5%と2.5%点に対応する標本相関係数\\(r\\)が0.444と-0.444なのかを確認してみましょう。 qPearson()関数は，qPearson(求めたい確率，N = サンプルサイズ，rho = 母集団相関係数)を引数に指定することで計算することができます。 qPearson(0.975, N = 20, rho = 0.0) ## [1] 0.4435775 qPearson(0.025, N = 20, rho = 0.0) ## [1] -0.4437682 それぞれ0.444と-0.444に対応していることが分かります。 "],
["有意水準.html", "5.2.2 有意水準", " 5.2.2 有意水準 \\(N = 20\\)の例において，\\(|r| &gt; .561\\)の範囲に含まれる確率が1%(0.01)となることを確認します。 1 - (pPearson(0.561, N = 20, rho = 0.0) - pPearson(-0.561, N = 20, rho = 0.0)) ## [1] 0.01001593 約1%となることがわかります。 付表3をqPearson()関数を使って再現してみます。サンプルサイズ4から20まで同じ値になるか確認してみましょう。 付表3はサンプルサイズ3から始まっていますが，Rでは計算ができないため4から始まっています。 4から20まで値を一つにまとめたベクトルを作成しています。4から20まで1つずつ値が増えていくベクトルを作成するには:記号を使うと便利です。 qPearson(0.975, N = 4:20, rho = 0.0) ## [1] 0.9499107 0.8781630 0.8111918 0.7542684 0.7065058 0.6661548 0.6316704 ## [8] 0.6018458 0.5757641 0.5527282 0.5322028 0.5137718 0.4971077 0.4819488 ## [15] 0.4680840 0.4553410 0.4435775 有意水準.05の列と同じ値が確認できます(qPearsonは下側確率を計算するので，求める限界値は片側検定の考え方を用いて97.5%点となります)。 "],
["t分布を用いた検定.html", "5.2.3 t分布を用いた検定", " 5.2.3 t分布を用いた検定 \\(t\\)分布を用いた検定を行ってみましょう。 標本相関係数\\(r\\)を(5.8)式の変数\\(t\\)に変換します。 \\[ t = \\frac{r}{\\sqrt{1 - r ^{2}}} \\times \\sqrt{N - 2}\\tag{5.8}\\\\ \\] 逸脱行動データにおける\\(r = 0.60(N = 20)\\)の数値例で計算してみましょう。 (0.6 / sqrt(1 - 0.6^2)) * sqrt(20 - 2) ## [1] 3.181981 自由度\\(df = 18\\)の\\(t\\)分布をプロットします。 x &lt;- seq(-4, 4, 0.01) plot(x, dt(x, df = 18), type = &quot;l&quot;, las = 1, bty = &quot;l&quot;, tcl = 0.2, xlab = &quot;t&quot;, xaxp = c(-4,4,8), ylab = &quot;確率密度&quot;) 計算で求めた\\(t = 3.181 \\cdots\\)という値はかなりまれであることがわかります。 教科書では付表4を使って有意かどうかの判定をしています。 Rでは自由度\\(N - 2\\)の\\(t\\)分布において，先ほど計算した\\(t\\)値(3.181…)が分布の何%に位置するか計算することができます。 計算にはpt()関数を使います。 pt()関数は，t分布の下側確率(probability)を略してpt()という名前になります。 pt()関数では，pt(確率を求めたいt値, df = 自由度)という引数を指定します。 上側確率を求めたい場合には，引数lower.tail = FALSEを追加で与えます。 lower.tail = FALSEを引数に指定した場合と，指定せずに1から引いた値はおなじ値となります。 1 - pt((0.6 / sqrt(1 - 0.6^2)) * sqrt(20 - 2), df = 18) ## [1] 0.002581463 pt((0.6 / sqrt(1 - 0.6^2)) * sqrt(20 - 2), df = 18, lower.tail = FALSE) ## [1] 0.002581463 5%水準(上側確率0.025)よりも小さいので，5%水準の両側検定で有意になります。また，この値は1%水準(上側確率0.005)よりも小さいので，1%水準の両側検定でも有意になります。 Rでは無相関仮説の検定を行うcor.test()関数があります。 cor.test()関数を使って検定を行ってみましょう。 まずは男子の逸脱行動データを読み込みます(\\(r = 0.60, N = 20\\))。 dat &lt;- read.csv(file = &quot;data/itsudatsu_data.csv&quot;) dat_M &lt;- subset(dat, sex == 1) nrow(dat_M) ## [1] 20 cor(dat_M$Grade_6th, dat_M$Grade_8th) ## [1] 0.5983922 cor.test()関数は，cor.test(変数x,変数y)という引数を指定します(そのほかの引数に関しては，?cor.testとコンソールに入力してください)。 cor.test(dat_M$Grade_6th, dat_M$Grade_8th, alternative = &quot;two.side&quot;) ## ## Pearson&#39;s product-moment correlation ## ## data: dat_M$Grade_6th and dat_M$Grade_8th ## t = 3.1687, df = 18, p-value = 0.005316 ## alternative hypothesis: true correlation is not equal to 0 ## 95 percent confidence interval: ## 0.2120125 0.8229856 ## sample estimates: ## cor ## 0.5983922 実行結果のうち，t =は\\(t\\)値を表します。今回は正確な標本相関係数の値が使われているので，\\(r = 0.6\\)で計算した時よりも\\(t\\)の値よりも少し小さくなっています。 同じ結果になるかは以下のコードで確認できます。 cor_res &lt;- cor(dat_M$Grade_6th, dat_M$Grade_8th) (cor_res / sqrt(1 - cor_res^2)) * sqrt(20 - 2) ## [1] 3.168687 df =は自由度を表します。今回は\\(N = 20\\)だったので，自由度は\\(df = N - 2\\)の18です。 p-valueはp値を表します。 この値は先ほどpt()関数で計算した上側確率を2倍したものになっています。pt()関数では，\\(t &gt; 3.181...\\)の確率しか求めていませんでしたが，両側検定では\\(t &lt; -3.181...\\)の確率も含まれるためです。 p値が5%水準(\\(\\alpha = .05\\)，1%水準(\\(\\alpha = .01\\))よりも小さいので1%水準で有意であることがわかります。 "],
["検定力の求め方.html", "5.3.1 検定力の求め方", " 5.3.1 検定力の求め方 \\(r\\)を\\(Z\\)変換した変数\\(Z\\)は以下の\\(\\mu_{Z}, \\sigma _{Z}\\)を持った正規分布で近似できます。 \\[ \\begin{align} \\mu _{Z} &amp;= \\tanh ^{-1}\\rho = \\frac{1}{2}\\ln\\frac{1 + \\rho}{ 1 - \\rho}\\\\ \\sigma _{Z} &amp;= \\frac{1}{\\sqrt{N - 3}} \\end{align} \\] 教科書では\\(\\rho = .4\\)で計算をしています。 mu_rho0.4 &lt;- (1/2) * log((1 + 0.4)/ (1 - 0.4)) sigma_rho0.4 &lt;- 1 / (sqrt(20 - 3)) mu_rho0.4 ## [1] 0.4236489 sigma_rho0.4 ## [1] 0.2425356 また，棄却の限界値\\(r = \\pm.444\\)を\\(Z\\)変換すると Z_U &lt;- (1 / 2) * log((1 + 0.444) / (1 - 0.444)) Z_L &lt;- (1 / 2) * log((1 - 0.444) / (1 + 0.444)) Z_U ## [1] 0.477202 Z_L ## [1] -0.477202 \\(Z = \\pm .477\\)となります。 正規分布における確率を計算するpnorm()関数を使って確率を計算します。 求める確率は\\(Z &gt; 0.477\\)となる上側確率と，\\(Z &lt; -0.477\\)となる下側確率なので，\\(Z = 0.477\\)の場合には1からpnorm()関数の結果を引いてあげる必要があります(もしくは，lower.tail = FALSEという引数を追加してください)。 1 - pnorm(Z_U, mean = mu_rho0.4, sd = sigma_rho0.4) ## [1] 0.4126221 pnorm(Z_L, mean = mu_rho0.4, sd = sigma_rho0.4) ## [1] 0.000101882 2つの結果を足すことで検定力を求めることができます。 1 - pnorm(Z_U, mean = mu_rho0.4, sd = sigma_rho0.4) + pnorm(Z_L, mean = mu_rho0.4, sd = sigma_rho0.4) ## [1] 0.412724 教科書と同じ結果が得られました。 教科書では，付表の標準正規分布表を使うために，\\(Z\\)の値を標準化し\\(z\\)としています。pnorm()関数の引数meanとsdが変わっています。 z_U &lt;- (Z_U - mu_rho0.4) / sigma_rho0.4 z_L &lt;- (Z_L - mu_rho0.4) / sigma_rho0.4 z_U ## [1] 0.220805 z_L ## [1] -3.714304 1 - pnorm(z_U, mean = 0, sd = 1) ## [1] 0.4126221 pnorm(z_L, mean = 0, sd = 1) ## [1] 0.000101882 1 - pnorm(z_U, mean = 0, sd = 1) + pnorm(z_L, mean = 0, sd = 1) ## [1] 0.412724 得られる結果は同じです。 "],
["検定力分析によるサンプルサイズの決定.html", "5.3.2 検定力分析によるサンプルサイズの決定", " 5.3.2 検定力分析によるサンプルサイズの決定 5.3.1の手順をpower_cor()関数として定義します。 引数には，サンプルサイズN，母集団相関係数\\(\\rho\\)を指定します。 power_cor &lt;- function(N, rho){ library(SuppDists) r_U &lt;- qPearson(p = 0.975, N = N, rho = 0) r_L &lt;- qPearson(p = 0.025, N = N, rho = 0) mu &lt;- atanh(rho) sigma &lt;- 1 / sqrt(N - 3) pnorm(atanh(r_U), mean = mu, sd = sigma, lower.tail = FALSE) + pnorm(atanh(r_L), mean = mu, sd = sigma) } サンプルサイズ\\(N = 20\\)，母集団相関係数\\(\\rho = .4\\)の時の検定力を計算してみましょう。 power_cor(N = 20, rho = 0.4) ## [1] 0.4135693 5.3.1で計算した検出力と同じ値が得られました。 \\(\\rho = .4\\)の時，サンプルサイズ\\(N = 100\\)で検定力がほぼ1に達するか確認しましょう。 power_cor(N = 100, rho = 0.4) ## [1] 0.9865186 付図1を書いてみましょう。ただし，\\(N = 100\\)と\\(N = 200\\)の時とします。 x &lt;- seq(-1, 1, 0.01) plot(x, power_cor(N = 100, rho = x), type = &quot;l&quot;, las = 1, bty = &quot;l&quot;, tcl = 0.2, xlim = c(-1,1), xaxp = c(-1,1, 10), xlab = expression(paste(&quot;母集団相関係数&quot;, rho)), ylab = &quot;検定力&quot;, col = &quot;blue&quot;) lines(x, power_cor(N = 200, rho = x)) abline(v = seq(-1, 1, 0.2), h = seq(0, 1, 0.2), col = &quot;lightgray&quot;, lty = &quot;dotted&quot;) legend(&quot;bottomright&quot;, legend = c(&quot;N = 100&quot;,&quot;N = 200&quot;), col = c(&quot;blue&quot;,&quot;black&quot;), lty = 1) "],
["任意の相関値を帰無仮説とした検定.html", "5.4.1 任意の相関値を帰無仮説とした検定", " 5.4.1 任意の相関値を帰無仮説とした検定 図5-5を書いてみます。 図5-5の母集団相関係数\\(\\rho = 0\\)の値を読み取ると，下側.025に対する値-0.44と上側.025に対する値.44が読み取れます。 この値は5.2.1でqPerson()関数で求めた値になります。 qPearson()関数を使って図5-5を描きます。 x &lt;- seq(-1, 1, 0.01)[-c(1,201)] plot(x, qPearson(0.975, N = 20, rho = x), type = &quot;l&quot;, las = 1, bty = &quot;l&quot;, tcl = 0.2, xlim = c(-1,1), xaxp = c(-1,1, 10), xlab = expression(paste(&quot;標本相関係数&quot;, r)), ylim = c(-1,1), yaxp = c(-1,1, 10), ylab = &quot;母集団相関係数&quot;, col = &quot;blue&quot;) lines(x, qPearson(0.025, N = 20, rho = x)) abline(v = seq(-1, 1, 0.2), h = seq(-1, 1, 0.2), col = &quot;lightgray&quot;, lty = &quot;dotted&quot;) abline(h = 0) points(x = qPearson(0.975, N = 20, rho = 0), y = 0, pch = 16) points(x = qPearson(0.025, N = 20, rho = 0), y = 0, pch = 16) legend(&quot;bottomright&quot;, legend = c(&quot;下側.025&quot;,&quot;上側.025&quot;), col = c(&quot;blue&quot;,&quot;black&quot;), lty = 1) "],
["信頼区間の算出.html", "5.4.2 信頼区間の算出", " 5.4.2 信頼区間の算出 男子の逸脱行動データを用いて母集団相関係数の95%信頼区間の限界値を計算します。 datが読み込まれている場合には，以下のコードは実行する必要はありません。 dat &lt;- read.csv(file = &quot;data/itsudatsu_data.csv&quot;) dat_M &lt;- subset(dat, sex == 1) nrow(dat_M) ## [1] 20 cor(dat_M$Grade_6th, dat_M$Grade_8th) ## [1] 0.5983922 (5.13)式，(5.14)式に従って上限下限を計算します。 \\[ \\begin{align} \\rho_{L} = \\tanh(\\tanh ^{-1} r - 1.96 / \\sqrt{N - 3}) \\tag{5.13}\\\\ \\rho _{U} = \\tanh(\\tanh ^{-1} r + 1.96 / \\sqrt{N - 3}) \\tag{5.13}\\\\ \\end{align} \\] \\(\\tanh ^{-1}\\)はatanh()関数で計算することができます。 rho_L &lt;- tanh(atanh(cor(dat_M$Grade_6th, dat_M$Grade_8th)) - (qnorm(0.975) / sqrt(20 - 3))) rho_U &lt;- tanh(atanh(cor(dat_M$Grade_6th, dat_M$Grade_8th)) + (qnorm(0.975) / sqrt(20 - 3))) rho_L ## [1] 0.2120125 rho_U ## [1] 0.8229856 母相関係数の95%信頼区間を計算することができました。 無相関仮説の検定を行うcor.test()関数では，実行結果の中に95%信頼区間を出力してくれています。 cor.test(dat_M$Grade_6th, dat_M$Grade_8th, alternative = &quot;two.side&quot;) ## ## Pearson&#39;s product-moment correlation ## ## data: dat_M$Grade_6th and dat_M$Grade_8th ## t = 3.1687, df = 18, p-value = 0.005316 ## alternative hypothesis: true correlation is not equal to 0 ## 95 percent confidence interval: ## 0.2120125 0.8229856 ## sample estimates: ## cor ## 0.5983922 実行結果の中にある95 percent confidence intervalの行を見ると，先ほど計算した95%信頼区間と同じ値が表示されています。 "],
["信頼区間を利用したサンプルサイズの決定.html", "5.4.3 信頼区間を利用したサンプルサイズの決定", " 5.4.3 信頼区間を利用したサンプルサイズの決定 付表5をcor_sample()関数で計算します。 cor_sample()関数は引数に，予想される相関係数rと望まれる95%信頼区間の幅wを指定します。 cor_sample &lt;- function(r,w){ temp &lt;- function(N){ (tanh(atanh(r)+qnorm(0.975)/sqrt(N-3))- tanh(atanh(r)-qnorm(0.975)/sqrt(N-3)))-w } ceiling(uniroot(temp,c(4,10e10))$root) } 予想される相関係数が\\(r = .5\\)，信頼区間の幅が.05の時の値を計算します。 cor_sample(r = .5, w = 0.05) ## [1] 3460 付表5とおなじ値が計算されました。 "],
["演習問題-5.html", "演習問題", " 演習問題 問題1 教科書p130の図5-1では，\\(N = 5\\)，\\(w = 3\\)の時の母集団比率\\(\\pi\\)の尤度関数をグラフで表しました。 尤度関数は以下の式です。 \\[ L(\\pi) = \\pi ^{3} (1 - \\pi) ^{2}\\\\ \\] 5.1.2最尤法では，上記の尤度関数をyuudo()として以下のコードで定義しました。 yuudo &lt;- function(PI){ PI ^3 * (1 - PI) ^2 } 試行数は\\(N = 5\\)のまま，成功数を\\(w = 4\\)に変えたとき，尤度関数がどのように変化するか確認します。 \\(N = 5\\)，\\(w = 4\\)の時の母集団比率\\(\\pi\\)の尤度関数をyuudo_new()関数として新たに定義してください。ただし，尤度関数は以下の式で表されます。 \\[ L(\\pi) = \\pi ^{4} (1 - \\pi) ^{1}\\\\ \\] 上記の数式を，yuudo_new()関数として定義してください。(ヒント：yuudo()関数の数字を変更するだけです) 問題2 以下のコードを実行して，\\(N = 5\\)，\\(w = 4\\)の時の母集団比率\\(\\pi\\)の尤度関数を尤度関数をグラフで確認してください。 x &lt;- seq(0, 1, 0.01) plot(x, yuudo_new(x), type = &quot;l&quot;, las = 1, bty = &quot;l&quot;, tcl = 0.2, xlab = expression(pi), ylab = &quot;尤度&quot;) 問題3 \\(N = 5\\)，\\(w = 4\\)の時の母集団比率\\(\\pi\\)の尤度関数において，\\(\\pi = 0.6, 0.8, 1.0\\)の時の尤度をそれぞれ求めてください。問題2で作成したグラフと値が一致しているか確認してください。 問題4 教科書では男子の逸脱行動データについて，無相関仮説の検定を行いいました。 女子のデータを使って検定を行ってみましょう。 以下のコードを実行して，女子の逸脱行動データを格納したdat_Fオブジェクトを作成してください。 dat &lt;- read.csv(file = &quot;data/itsudatsu_data.csv&quot;) dat_F &lt;- subset(dat, sex == 2) 問題5 女子の逸脱行動データにおいて，小6のときの逸脱行動得点と中2のときの逸脱行動得点の相関係数を求めてください。 問題6 女子の逸脱行動データに対して，cor.test()関数を使って無相関仮説の検定を行ってください。 問題7 dat_Fのデータと，教科書p.141(5.8)式を使って\\(t\\)値を計算してください(問題6の結果と一致しているか確認してください)。 問題8 問題7で計算した\\(t\\)値から，pt()関数を使って\\(p\\)値を求めてください(問題6の結果と一致するか確認してください)。 (ヒント1：pt()関数は下側確率を求めるので，1 - pt(...)とするかpt(..., lowwer.tail = FALSE)としないと上側確率が求められません) (ヒント2：pt()関数の結果は分布の片側しか示していないので，計算結果を2倍するとcor.test()関数の結果と一致します) 問題9 女子の逸脱行動データについて，母集団相関係数\\(\\rho\\)の95%信頼区間を求めてください(問題6の結果と一致することを確認してください)。 "]
]
